name: Unit testing

on:
  push:
    branches:
      - next
  pull_request:
    branches:
      - next

jobs:
  test_job:
    name: Run tests using python v3.9
    runs-on: ubuntu-latest
    environment: getpay-api
    env:
      MONGODB_USERNAME: test_user
      MONGODB_PASSWORD: test_password
      MONGODB_DATABASE: test_database
    services:
      db:
        image: bitnami/mongodb
        ports:
          - 27017/tcp
        env:
          MONGODB_ROOT_PASSWORD: root
          MONGODB_USERNAME: ${{env.MONGODB_USERNAME}}
          MONGODB_PASSWORD: ${{env.MONGODB_PASSWORD}}
          MONGODB_DATABASE: ${{env.MONGODB_DATABASE}}
        options: >-
          --health-cmd "mongo"
          --health-interval 15s
          --health-timeout 5s
          --health-retries 7
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Create environment file
        run: printf '${{secrets.ENV_FILE}}' > .env

      - name: Export environment variables (testing .env)
        uses: cardinalby/export-env-action@1.0.0
        with:
          envFile: .env.testing

      - name: Install dependencies
        run: |
          pip install -r all-requirements.txt

      - name: Initialize data
        env:
          REDIS_PORT: ${{job.services.redis.ports[6379]}}
          MONGODB_PORT: ${{ job.services.db.ports[27017] }}

        run: |
          python3 manage.py init
          python3 manage.py create_user -u ${{env.USER_EMAIL}} -p ${{env.USER_PASSWORD}} -y

      - name: Run tests
        run: |
          pytest -sv --cache-clear

      - name: Cleanup Database
        run: |
          python3 manage.py drop_collection -f

      - name: Cleanup docker
        run: python3 cleanup_docker.py
