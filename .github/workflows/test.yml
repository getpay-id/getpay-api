name: Unit testing

on:
  push:
    branches:
      - next
  pull_request:
    branches:
      - next

jobs:
  test_job:
    name: Run tests using python v${{ matrix.py }}
    runs-on: ubuntu-latest
    environment: getpay-api
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.9"
          - "3.8"

    env:
      REDIS_HOST: redis
      MONGODB_HOST: db
      MONGODB_USERNAME: test_user
      MONGODB_PASSWORD: test123
      MONGODB_DATABASE: test_db

    container: python:${{ matrix.py }}
    services:
      db:
        image: bitnami/mongodb
        ports:
          - 27017:27017
        env:
          MONGODB_ROOT_USER: root
          MONGODB_ROOT_PASSWORD: root
          MONGODB_USERNAME: ${{env.MONGODB_USERNAME}}
          MONGODB_PASSWORD: ${{env.MONGODB_PASSWORD}}
          MONGODB_DATABASE: ${{env.MONGODB_DATABASE}}

      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
      - name: Setup python v${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - name: Create environment file
        run: printf '${{secrets.ENV_FILE}}' >> .env

      - name: Export environment variables (app .env)
        uses: cardinalby/export-env-action@1.0.0
        with:
          envFile: .env

      - name: Export environment variables (testing .env)
        uses: cardinalby/export-env-action@1.0.0
        with:
          envFile: .env.testing

      - name: Install dependencies
        run: |
          pip install -r all-requirements.txt

      - name: Setup Environment
        run: |
          export REDIS_HOST=${{ env.REDIS_HOST }}
          export MONGODB_HOST=${{ env.MONGODB_HOST }}
          export MONGODB_USERNAME=${{ env.MONGODB_USERNAME }}
          export MONGODB_PASSWORD=${{ env.MONGODB_PASSWORD }}
          export MONGODB_DATABASE=${{ env.MONGODB_DATABASE }}

      - name: Initialize data
        run: |
          python3 manage.py init
          python3 manage.py create_user -u ${{env.USER_EMAIL}} -p ${{env.USER_PASSWORD}} -y

      - name: Run tests
        run: |
          pytest -v --cache-clear
