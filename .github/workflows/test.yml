name: Unit testing

on:
  push:
    branches:
      - next
  pull_request:
    branches:
      - next

jobs:
  test_job:
    name: Run tests using python v${{ matrix.py }}
    runs-on: ubuntu-latest
    environment: getpay-api
    strategy:
      fail-fast: false
      matrix:
        py:
          - "3.9"
          - "3.8"

    env:
      REDIS_HOST: 127.0.0.1
      MONGODB_USERNAME: test_user
      MONGODB_PASSWORD: test123456
      MONGODB_DATABASE: test_gpdb
      MONGODB_HOST: 127.0.0.1

    services:
      db:
        image: bitnami/mongodb
        ports:
          - 27017:27017
        env:
          MONGODB_ROOT_PASSWORD: root
          MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}
          MONGODB_PASSWORD: ${{ env.MONGODB_PASSWORD }}
          MONGODB_DATABASE: ${{ env.MONGODB_DATABASE }}
        options: >-
          --health-cmd mongo
          --health-interval 15s
          --health-timeout 10s
          --health-retries 10

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}

      - name: Create environment file
        run: printf '${{secrets.ENV_FILE}}' > .env

      - name: Export environment variables (testing .env)
        uses: cardinalby/export-env-action@1.0.0
        with:
          envFile: .env.testing

      - name: Install dependencies
        run: |
          pip install -r all-requirements.txt

      - name: Initialize data
        env:
          MONGODB_PORT: ${{job.services.db.ports[27017]}}
          REDIS_PORT: ${{job.services.redis.ports[6379]}}

        run: |
          python -c "import app.settings as settings; v = [f'{key}={getattr(settings, key)}' for key in dir(settings) if not key.startswith('__') and key.isupper()]; print('\n'.join(v))"
          python3 manage.py init
          python3 manage.py create_user -u ${{env.USER_EMAIL}} -p ${{env.USER_PASSWORD}} -y

      # - name: Run tests
      #   run: |
      #     pytest -v --cache-clear
